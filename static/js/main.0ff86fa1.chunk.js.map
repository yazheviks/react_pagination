{"version":3,"sources":["components/Button.js","components/Pagination.js","components/Select.js","App.js","index.js"],"names":["classNames","require","Button","onClick","disableIf","text","className","disabled","type","Pagination","totalAmountOfItems","perPage","pageSelected","onPageChange","clickNext","clickPrevious","withInfo","pagesAmount","Math","ceil","pages","Array","fill","map","page","index","key","uuidv4","pageNumber","active","event","target","textContent","defaultProps","Select","onChange","initialState","App","state","number","setState","prevState","onPerPageChange","value","this","React","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"wOAGMA,EAAaC,EAAQ,GAEdC,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,UAAWC,EAAvB,EAAuBA,KAAvB,OACpB,wBACEC,UAAWN,EAAW,CACpB,aAAa,EACbO,SAAUH,KAGZ,4BACEI,KAAK,SACLF,UAAU,YACVH,QAASA,GAERE,KCZDL,EAAaC,EAAQ,GAEdQ,EAAa,SAAC,GAQpB,IAPLC,EAOI,EAPJA,mBACAC,EAMI,EANJA,QACAC,EAKI,EALJA,aACAC,EAII,EAJJA,aACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,cACAC,EACI,EADJA,SAEMC,EAAcC,KAAKC,KAAKT,EAAqBC,GAE7CS,EAAQ,IAAIC,MAAMJ,GAAaK,KAAK,IAAIC,KAAI,SAACC,EAAMC,GAAP,mBAAC,eAC9CD,GAD6C,IAEhDE,IAAKC,cACLC,WAAYH,EAAQ,OAGtB,OACE,yBAAKnB,UAAU,cACZU,GACC,yBAAKV,UAAU,SACXM,EAAe,GAAKD,EAAU,EAC/B,MACCC,EAAgBD,EACjB,OACAD,GAGL,wBAAIJ,UAAU,qCACZ,kBAAC,EAAD,CACEF,UAA4B,IAAjBQ,EACXP,KAAK,WACLF,QAASY,IAEVK,EAAMG,KAAI,SAAAC,GAAI,OACb,wBACEE,IAAKF,EAAKE,IACVpB,UAAWN,EAAW,CACpB,aAAa,EACb6B,OAAQL,EAAKI,aAAehB,KAG9B,4BACEJ,KAAK,SACLF,UAAU,YACVH,QAAS,SAAA2B,GAAK,OAAIjB,GAAciB,EAAMC,OAAOC,eAE5CR,EAAKI,gBAIZ,kBAAC,EAAD,CACExB,UAAWQ,IAAiBK,EAC5BZ,KAAK,OACLF,QAASW,OAiBnBL,EAAWwB,aAAe,CACxBjB,SAAU,SC5EL,IAAMkB,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACpB,4BAAQA,SAAUA,GAChB,qCACA,qCACA,sCACA,wCCHEC,EAAe,CACnB1B,mBAAoB,GACpBC,QAAS,EACTC,aAAc,GA+DDyB,E,4MA3DbC,MAAQF,E,EAERvB,aAAe,SAAC0B,GACd,EAAKC,SAAS,CACZ5B,aAAc2B,K,EAIlBxB,cAAgB,WACV,EAAKuB,MAAM1B,eAAiBwB,EAAaxB,cAI7C,EAAK4B,UAAS,SAAAC,GAAS,MAAK,CAC1B7B,aAAc6B,EAAU7B,aAAe,O,EAI3CE,UAAY,WAAO,IAAD,EACsC,EAAKwB,MAAnD5B,EADQ,EACRA,mBAAoBC,EADZ,EACYA,QADZ,EACqBC,eAEhBM,KAAKC,KAAKT,EAAqBC,IAIpD,EAAK6B,UAAS,SAAAC,GAAS,MAAK,CAC1B7B,aAAc6B,EAAU7B,aAAe,O,EAI3C8B,gBAAkB,SAACZ,GAAW,IACpBa,EAAUb,EAAMC,OAAhBY,MAER,EAAKH,SAAS,CACZ7B,SAAUgC,K,uDAIJ,IAAD,EAC+CC,KAAKN,MAAnD5B,EADD,EACCA,mBAAoBC,EADrB,EACqBA,QAASC,EAD9B,EAC8BA,aAErC,OACE,yBAAKN,UAAU,OACb,kBAAC,EAAD,CAAQ6B,SAAUS,KAAKF,kBAEvB,kBAAC,EAAD,CACEhC,mBAAoBA,EACpBC,QAASA,EACTC,aAAcA,EACdC,aAAc+B,KAAK/B,aACnBE,cAAe6B,KAAK7B,cACpBD,UAAW8B,KAAK9B,UAChBE,SAAS,c,GArDD6B,IAAMC,eCPxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.0ff86fa1.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst classNames = require('classnames');\n\nexport const Button = ({ onClick, disableIf, text }) => (\n  <li\n    className={classNames({\n      'page-item': true,\n      disabled: disableIf,\n    })}\n  >\n    <button\n      type=\"button\"\n      className=\"page-link\"\n      onClick={onClick}\n    >\n      {text}\n    </button>\n  </li>\n);\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  disableIf: PropTypes.bool.isRequired,\n  text: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport { Button } from './Button';\n\nconst classNames = require('classnames');\n\nexport const Pagination = ({\n  totalAmountOfItems,\n  perPage,\n  pageSelected,\n  onPageChange,\n  clickNext,\n  clickPrevious,\n  withInfo,\n}) => {\n  const pagesAmount = Math.ceil(totalAmountOfItems / perPage);\n\n  const pages = new Array(pagesAmount).fill({}).map((page, index) => ({\n    ...page,\n    key: uuidv4(),\n    pageNumber: index + 1,\n  }));\n\n  return (\n    <nav className=\"pagination\">\n      {withInfo && (\n        <div className=\"info\">\n          {(pageSelected - 1) * perPage + 1}\n          {' - '}\n          {(pageSelected) * perPage}\n          {' of '}\n          {totalAmountOfItems}\n        </div>\n      )}\n      <ul className=\"pagination justify-content-center\">\n        <Button\n          disableIf={pageSelected === 1}\n          text=\"Previous\"\n          onClick={clickPrevious}\n        />\n        {pages.map(page => (\n          <li\n            key={page.key}\n            className={classNames({\n              'page-item': true,\n              active: page.pageNumber === pageSelected,\n            })}\n          >\n            <button\n              type=\"button\"\n              className=\"page-link\"\n              onClick={event => onPageChange(+event.target.textContent)}\n            >\n              {page.pageNumber}\n            </button>\n          </li>\n        ))}\n        <Button\n          disableIf={pageSelected === pagesAmount}\n          text=\"Next\"\n          onClick={clickNext}\n        />\n      </ul>\n    </nav>\n  );\n};\n\nPagination.propTypes = {\n  totalAmountOfItems: PropTypes.number.isRequired,\n  perPage: PropTypes.number.isRequired,\n  pageSelected: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n  clickNext: PropTypes.func.isRequired,\n  clickPrevious: PropTypes.func.isRequired,\n  withInfo: PropTypes.bool,\n};\n\nPagination.defaultProps = {\n  withInfo: 'false',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Select = ({ onChange }) => (\n  <select onChange={onChange}>\n    <option>3</option>\n    <option>5</option>\n    <option>10</option>\n    <option>20</option>\n  </select>\n);\n\nSelect.propTypes = {\n  onChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { Select } from './components/Select';\n\nconst initialState = {\n  totalAmountOfItems: 42,\n  perPage: 5,\n  pageSelected: 1,\n};\n\nclass App extends React.PureComponent {\n  state = initialState;\n\n  onPageChange = (number) => {\n    this.setState({\n      pageSelected: number,\n    });\n  }\n\n  clickPrevious = () => {\n    if (this.state.pageSelected === initialState.pageSelected) {\n      return;\n    }\n\n    this.setState(prevState => ({\n      pageSelected: prevState.pageSelected - 1,\n    }));\n  }\n\n  clickNext = () => {\n    const { totalAmountOfItems, perPage, pageSelected } = this.state;\n\n    if (pageSelected === Math.ceil(totalAmountOfItems / perPage)) {\n      return;\n    }\n\n    this.setState(prevState => ({\n      pageSelected: prevState.pageSelected + 1,\n    }));\n  }\n\n  onPerPageChange = (event) => {\n    const { value } = event.target;\n\n    this.setState({\n      perPage: +value,\n    });\n  }\n\n  render() {\n    const { totalAmountOfItems, perPage, pageSelected } = this.state;\n\n    return (\n      <div className=\"app\">\n        <Select onChange={this.onPerPageChange} />\n\n        <Pagination\n          totalAmountOfItems={totalAmountOfItems}\n          perPage={perPage}\n          pageSelected={pageSelected}\n          onPageChange={this.onPageChange}\n          clickPrevious={this.clickPrevious}\n          clickNext={this.clickNext}\n          withInfo=\"true\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}