{"version":3,"sources":["components/Button.js","components/Pagination.js","App.js","index.js"],"names":["classNames","require","Button","onClick","disableIf","text","className","disabled","type","Pagination","total","perPage","pageSelected","onPageChange","clickNext","clickPrevious","withInfo","pagesAmount","Math","ceil","pages","Array","fill","map","page","index","key","uuidv4","pageNumber","active","event","target","textContent","defaultProps","App","state","number","setState","prevState","this","React","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"wOAGMA,EAAaC,EAAQ,GAEdC,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,UAAWC,EAAvB,EAAuBA,KAAvB,OACpB,wBACEC,UAAWN,EAAW,CACpB,aAAa,EACbO,SAAUH,KAGZ,4BACEI,KAAK,SACLF,UAAU,YACVH,QAASA,GAERE,KCZDL,EAAaC,EAAQ,GAEdQ,EAAa,SAAC,GAQpB,IAPLC,EAOI,EAPJA,MACAC,EAMI,EANJA,QACAC,EAKI,EALJA,aACAC,EAII,EAJJA,aACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,cACAC,EACI,EADJA,SAEMC,EAAcC,KAAKC,KAAKT,EAAQC,GAEhCS,EAAQ,IAAIC,MAAMJ,GAAaK,KAAK,IAAIC,KAAI,SAACC,EAAMC,GAAP,mBAAC,eAC9CD,GAD6C,IAEhDE,IAAKC,cACLC,WAAYH,EAAQ,OAGtB,OACE,yBAAKnB,UAAU,cACZU,EAEG,yBAAKV,UAAU,SACXM,EAAe,GAAKD,EAAU,EAC/B,MACCC,EAAgBD,EACjB,OACAD,GAGH,KACJ,wBAAIJ,UAAU,qCACZ,kBAAC,EAAD,CACEF,UAA4B,IAAjBQ,EACXP,KAAK,WACLF,QAASY,IAEVK,EAAMG,KAAI,SAAAC,GAAI,OACb,wBACEE,IAAKF,EAAKE,IACVpB,UAAWN,EAAW,CACpB,aAAa,EACb6B,OAAQL,EAAKI,aAAehB,KAG9B,4BACEJ,KAAK,SACLF,UAAU,YACVH,QAAS,SAAA2B,GAAK,OAAIjB,GAAciB,EAAMC,OAAOC,eAE5CR,EAAKI,gBAIZ,kBAAC,EAAD,CACExB,UAAWQ,IAAiBK,EAC5BZ,KAAK,OACLF,QAASW,OAiBnBL,EAAWwB,aAAe,CACxBjB,SAAU,S,ICzBGkB,E,4MAnDbC,MAAQ,CACNzB,MAAO,GACPC,QAAS,EACTC,aAAc,G,EAGhBC,aAAe,SAACuB,GACd,EAAKC,SAAS,CACZzB,aAAcwB,K,EAIlBrB,cAAgB,WACkB,IAA5B,EAAKoB,MAAMvB,cAIf,EAAKyB,UAAS,SAAAC,GAAS,MAAK,CAC1B1B,aAAc0B,EAAU1B,aAAe,O,EAI3CE,UAAY,WAAO,IAAD,EACyB,EAAKqB,MAAtCzB,EADQ,EACRA,MAAOC,EADC,EACDA,QADC,EACQC,eAEHM,KAAKC,KAAKT,EAAQC,IAIvC,EAAK0B,UAAS,SAAAC,GAAS,MAAK,CAC1B1B,aAAc0B,EAAU1B,aAAe,O,uDAIjC,IAAD,EACkC2B,KAAKJ,MAAtCzB,EADD,EACCA,MAAOC,EADR,EACQA,QAASC,EADjB,EACiBA,aAExB,OACE,kBAAC,EAAD,CACEF,MAAOA,EACPC,QAASA,EACTC,aAAcA,EACdC,aAAc0B,KAAK1B,aACnBE,cAAewB,KAAKxB,cACpBD,UAAWyB,KAAKzB,UAChBE,SAAS,a,GA9CCwB,IAAMC,eCAxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.23eb0b9d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst classNames = require('classnames');\n\nexport const Button = ({ onClick, disableIf, text }) => (\n  <li\n    className={classNames({\n      'page-item': true,\n      disabled: disableIf,\n    })}\n  >\n    <button\n      type=\"button\"\n      className=\"page-link\"\n      onClick={onClick}\n    >\n      {text}\n    </button>\n  </li>\n);\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  disableIf: PropTypes.bool.isRequired,\n  text: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport { Button } from './Button';\n\nconst classNames = require('classnames');\n\nexport const Pagination = ({\n  total,\n  perPage,\n  pageSelected,\n  onPageChange,\n  clickNext,\n  clickPrevious,\n  withInfo,\n}) => {\n  const pagesAmount = Math.ceil(total / perPage);\n\n  const pages = new Array(pagesAmount).fill({}).map((page, index) => ({\n    ...page,\n    key: uuidv4(),\n    pageNumber: index + 1,\n  }));\n\n  return (\n    <nav className=\"pagination\">\n      {withInfo\n        ? (\n          <div className=\"info\">\n            {(pageSelected - 1) * perPage + 1}\n            {' - '}\n            {(pageSelected) * perPage}\n            {' of '}\n            {total}\n          </div>\n        )\n        : null}\n      <ul className=\"pagination justify-content-center\">\n        <Button\n          disableIf={pageSelected === 1}\n          text=\"Previous\"\n          onClick={clickPrevious}\n        />\n        {pages.map(page => (\n          <li\n            key={page.key}\n            className={classNames({\n              'page-item': true,\n              active: page.pageNumber === pageSelected,\n            })}\n          >\n            <button\n              type=\"button\"\n              className=\"page-link\"\n              onClick={event => onPageChange(+event.target.textContent)}\n            >\n              {page.pageNumber}\n            </button>\n          </li>\n        ))}\n        <Button\n          disableIf={pageSelected === pagesAmount}\n          text=\"Next\"\n          onClick={clickNext}\n        />\n      </ul>\n    </nav>\n  );\n};\n\nPagination.propTypes = {\n  total: PropTypes.number.isRequired,\n  perPage: PropTypes.number.isRequired,\n  pageSelected: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n  clickNext: PropTypes.func.isRequired,\n  clickPrevious: PropTypes.func.isRequired,\n  withInfo: PropTypes.bool,\n};\n\nPagination.defaultProps = {\n  withInfo: 'false',\n};\n","import React from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\n\nclass App extends React.PureComponent {\n  state = {\n    total: 42,\n    perPage: 5,\n    pageSelected: 1,\n  }\n\n  onPageChange = (number) => {\n    this.setState({\n      pageSelected: number,\n    });\n  }\n\n  clickPrevious = () => {\n    if (this.state.pageSelected === 1) {\n      return;\n    }\n\n    this.setState(prevState => ({\n      pageSelected: prevState.pageSelected - 1,\n    }));\n  }\n\n  clickNext = () => {\n    const { total, perPage, pageSelected } = this.state;\n\n    if (pageSelected === Math.ceil(total / perPage)) {\n      return;\n    }\n\n    this.setState(prevState => ({\n      pageSelected: prevState.pageSelected + 1,\n    }));\n  }\n\n  render() {\n    const { total, perPage, pageSelected } = this.state;\n\n    return (\n      <Pagination\n        total={total}\n        perPage={perPage}\n        pageSelected={pageSelected}\n        onPageChange={this.onPageChange}\n        clickPrevious={this.clickPrevious}\n        clickNext={this.clickNext}\n        withInfo=\"true\"\n      />\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}